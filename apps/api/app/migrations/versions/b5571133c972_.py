"""empty message

Revision ID: b5571133c972
Revises: 3721e17267b0
Create Date: 2025-09-10 18:26:49.640633

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b5571133c972'
down_revision: Union[str, None] = '3721e17267b0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Unique identifier for the user'),
    sa.Column('username', sa.String(length=50), nullable=False, comment='Unique username for application login'),
    sa.Column('broadcaster_type', sa.String(length=50), nullable=True, comment='Type of broadcaster (e.g., affiliate, partner, etc.)'),
    sa.Column('avatar_url', sa.String(length=500), nullable=True, comment="URL to user's profile picture"),
    sa.Column('twitch_id', sa.String(length=100), nullable=True, comment='Twitch platform user identifier'),
    sa.Column('twitch_display_name', sa.String(length=100), nullable=True, comment='Display name shown on Twitch platform'),
    sa.Column('riot_id', sa.String(length=100), nullable=True, comment='Riot Games account identifier (username#tag format)'),
    sa.Column('hdev_api_key', sa.String(length=200), nullable=True, comment='Henrik Dev API key for VALORANT statistics access'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Account status flag - False for suspended/deleted accounts'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Account creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last account modification timestamp'),
    sa.CheckConstraint("avatar_url IS NULL OR avatar_url ~ '^https?://'", name='ck_users_avatar_url_format'),
    sa.CheckConstraint("length(username) >= 3 AND username ~ '^[a-zA-Z0-9_-]+$'", name='ck_users_username_format'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('twitch_id', name='uq_users_twitch_id'),
    comment='Application users with gaming platform integrations'
    )
    op.create_index('ix_users_active_created', 'users', ['is_active', 'created_at'], unique=False)
    op.create_index(op.f('ix_users_twitch_id'), 'users', ['twitch_id'], unique=True)
    op.create_index('ix_users_twitch_lookup', 'users', ['twitch_id', 'twitch_display_name'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('overlays',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the overlay configuration'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='Reference to the user who owns this overlay'),
    sa.Column('overlay_style', sa.String(length=20), nullable=False, comment='Visual style variant for the overlay presentation'),
    sa.Column('background_color', sa.String(length=7), nullable=False, comment='Primary background color in hexadecimal format'),
    sa.Column('disabled_background', sa.Boolean(), nullable=False, comment='Flag to disable background rendering'),
    sa.Column('disabled_border', sa.Boolean(), nullable=False, comment='Flag to disable border rendering around overlay elements'),
    sa.Column('disabled_background_gradient', sa.Boolean(), nullable=False, comment='Flag to disable gradient effects on background'),
    sa.Column('disabled_glow_effect', sa.Boolean(), nullable=False, comment='Flag to disable glow visual effects'),
    sa.Column('disabled_peak_rank_icon', sa.Boolean(), nullable=False, comment='Flag to hide peak rank icon display'),
    sa.Column('disabled_leaderboard_place', sa.Boolean(), nullable=False, comment='Flag to hide leaderboard position display'),
    sa.Column('disabled_peak_rr', sa.Boolean(), nullable=False, comment='Flag to hide peak rating (RR) display'),
    sa.Column('text_color', sa.String(length=7), nullable=False, comment='Primary text color in hexadecimal format'),
    sa.Column('primary_color', sa.String(length=7), nullable=False, comment='Secondary text color for highlights in hexadecimal format'),
    sa.Column('overlay_font', sa.String(length=50), nullable=False, comment='Font family name for text rendering'),
    sa.Column('win_color', sa.String(length=7), nullable=False, comment='Color for win indicators in hexadecimal format'),
    sa.Column('lose_color', sa.String(length=7), nullable=False, comment='Color for loss indicators in hexadecimal format'),
    sa.Column('disabled_win_lose', sa.Boolean(), nullable=False, comment='Flag to hide win/loss indicator display'),
    sa.Column('disabled_last_match_points', sa.Boolean(), nullable=False, comment='Flag to hide recent match points display'),
    sa.Column('disabled_progress', sa.Boolean(), nullable=False, comment='Flag to hide progress bar display'),
    sa.Column('progress_color', sa.String(length=7), nullable=False, comment='Progress bar fill color in hexadecimal format'),
    sa.Column('progress_bg_color', sa.String(length=7), nullable=False, comment='Progress bar background color in hexadecimal format'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Flag indicating if overlay is currently active'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when overlay was created'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Timestamp when overlay was last modified'),
    sa.CheckConstraint("background_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_background_color_hex'),
    sa.CheckConstraint("lose_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_lose_color_hex'),
    sa.CheckConstraint("overlay_font ~ '^[a-zA-Z0-9\\s-]+$' AND length(overlay_font) >= 2", name='ck_overlay_font_format'),
    sa.CheckConstraint("overlay_style IN ('old', 'new', 'minimal', 'new_v2')", name='ck_overlay_style_enum'),
    sa.CheckConstraint("primary_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_primary_color_hex'),
    sa.CheckConstraint("progress_bg_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_progress_bg_color_hex'),
    sa.CheckConstraint("progress_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_progress_color_hex'),
    sa.CheckConstraint("text_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_text_color_hex'),
    sa.CheckConstraint("win_color ~ '^#[0-9A-Fa-f]{6}$'", name='ck_overlay_win_color_hex'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Streaming overlay configurations with visual and functional settings'
    )
    op.create_index('ix_overlays_style_created', 'overlays', ['overlay_style', 'created_at'], unique=False)
    op.create_index('ix_overlays_updated_desc', 'overlays', [sa.literal_column('updated_at DESC')], unique=False)
    op.create_index('ix_overlays_user_active', 'overlays', ['user_id', 'is_active'], unique=False)
    op.create_index(op.f('ix_overlays_user_id'), 'overlays', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_overlays_user_id'), table_name='overlays')
    op.drop_index('ix_overlays_user_active', table_name='overlays')
    op.drop_index('ix_overlays_updated_desc', table_name='overlays')
    op.drop_index('ix_overlays_style_created', table_name='overlays')
    op.drop_table('overlays')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index('ix_users_twitch_lookup', table_name='users')
    op.drop_index(op.f('ix_users_twitch_id'), table_name='users')
    op.drop_index('ix_users_active_created', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
